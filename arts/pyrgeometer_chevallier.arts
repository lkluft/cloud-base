#DEFINITIONS:  -*-sh-*-
#
# Author: Lukas Kluft

Arts2 {

INCLUDE "general/general.arts"
INCLUDE "general/continua.arts"
INCLUDE "general/agendas.arts"
INCLUDE "general/planet_earth.arts"

# Agenda for scalar gas absorption calculation
Copy(abs_xsec_agenda, abs_xsec_agenda__noCIA)

# (standard) emission calculation
Copy( iy_main_agenda, iy_main_agenda__Emission )

# cosmic background radiation
Copy( iy_space_agenda, iy_space_agenda__CosmicBackground )

# standard surface agenda (i.e., make use of surface_rtprop_agenda)
Copy( iy_surface_agenda, iy_surface_agenda__UseSurfaceRtprop )

# on-the-fly absorption
Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__LookUpTable )
# Copy( propmat_clearsky_agenda, propmat_clearsky_agenda__OnTheFly )

# sensor-only path
Copy( ppath_agenda, ppath_agenda__FollowSensorLosPath )

# no refraction
Copy( ppath_step_agenda, ppath_step_agenda__GeometricPath )


# Number of Stokes components to be computed
IndexSet( stokes_dim, 1 )

# Clearsky = No scattering
cloudboxOff

# Absorption species
abs_speciesSet( species=[ "H2O, H2O-SelfContCKDMT252, H2O-ForeignContCKDMT252",
                          "O2, O2-CIAfunCKDMT100",
                          "N2, N2-CIAfunCKDMT252, N2-CIArotCKDMT252",
                          "O3",
                          "CO2, CO2-CKDMT252"
                        ])

#Define Line shape
abs_lineshape_per_tgDefine( abs_lineshape, abs_species,
        ["Voigt_Kuntz6", "Voigt_Kuntz6", "Voigt_Kuntz6",
         "Voigt_Kuntz6", "Voigt_Kuntz6"],
        ["VVH", "VVH", "VVH", "VVH", "VVH"],
        [750e9, 750e9, 750e9, 750e9, 750e9] )

# Read HITRAN catalog (needed for O3):
# abs_linesReadFromHitran(abs_lines,
# "/scratch/uni/u237/data/catalogue/hitran/hitran2012/HITRAN2012.par",
#                         1e12,
#                         70e12 )
# abs_lines_per_speciesCreateFromLines

# A pressure grid rougly matching 0 to 12 km
# VectorNLogSpace( p_grid, 100, 1000e2, 100e2 )

# Atmospheric scenario
AtmosphereSet1D
# ReadXML( batch_atm_fields_compact, "planets/Earth/ECMWF/IFS/Chevallier_91L/chevallierl91_all_full.xml.gz" )
ReadXML( batch_atm_fields_compact, "midlatitude-summer-synthetic-iwp.xml" )
# add constant profiles for O2, N2, and CO2
batch_atm_fields_compactAddConstant( name="abs_species-O2", value=0.2095 )
batch_atm_fields_compactAddConstant( name="abs_species-N2", value=0.7808 )
batch_atm_fields_compactAddConstant( name="abs_species-CO2", value=3.3e-4 )

# Set number of batch cases
IndexSet( ybatch_start, 0)
nelemGet( ybatch_n, batch_atm_fields_compact )

# Weakly reflecting surface
VectorSetConstant( surface_scalar_reflectivity, 1, 0. )
Copy( surface_rtprop_agenda,
      surface_rtprop_agenda__Specular_NoPol_ReflFix_SurfTFromt_surface )

# We select here to use radiances.
StringSet( iy_unit, "1" )

# The below lines are important to select frequency range and resolution.
# Grid spacing and FWHM of the Gaussian response should match!
VectorLinSpace( f_grid, 3e12, 66e12, 100e9 )

# Lookup Table
ReadXML( abs_lookup, "abs_lookup.xml" )
abs_lookupAdapt

# Sensor off
jacobianOff
AntennaOff
sensorOff

AgendaSet( ybatch_calc_agenda )
{
    # Extract the atmospheric profiles for this case:
    Extract(
    atm_fields_compact,
    batch_atm_fields_compact,
    ybatch_index
    )

    # Split up *atm_fields_compact* to
    # generate p_grid, t_field, z_field, vmr_field:
    AtmFieldsFromCompact

    # Definition of sensor position and LOS
    Extract( z_surface, z_field, 0 )
    Copy( sensor_pos, z_surface )
    MatrixSet( sensor_los, [0] )

    # Perform RT calculations
    abs_xsec_agenda_checkedCalc
    propmat_clearsky_agenda_checkedCalc
    atmfields_checkedCalc( bad_partition_functions_ok = 1 )
    atmgeom_checkedCalc
    cloudbox_checkedCalc
    sensor_checkedCalc

    yCalc
}

ybatchCalc( robust=1 )

WriteXML( "binary", f_grid, "f_grid.xml" )
WriteXML( "binary", ybatch, "ybatch.xml" )
}
